<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxNewEmployee.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>