<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxUpdatePage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>